---
# Copyright (c) 2024 Oracle and/or its affiliates.
# This software is made available to you under the terms of the Universal Permissive License (UPL), Version 1.0.
# The Universal Permissive License (UPL), Version 1.0 (see COPYING or https://oss.oracle.com/licenses/upl)
# See LICENSE.TXT for details.

- name: Install a KVM server
  hosts: server
  vars_files:
    - default_vars.yml
  become: true

  tasks:

    - name: Install Oracle Linux 8 virtualization packages
      ansible.builtin.dnf:
        name:
          - "@virt"
          - virt-install
          - virt-viewer
          - containers-common
          - cockpit
          - cockpit-machines
        state: present
      retries: 5
      delay: 10
      when: ansible_distribution == 'OracleLinux' and ansible_distribution_major_version == '8'

    - name: Install Oracle Linux 9 virtualization packages
      ansible.builtin.dnf:
        name:
          - qemu-kvm
          - libvirt
          - virt-install
          - virt-viewer
          - containers-common
          - cockpit
          - cockpit-machines
        state: present
      retries: 5
      delay: 10
      when: ansible_distribution == 'OracleLinux' and ansible_distribution_major_version == '9'

    - name: Start and enable Oracle Linux 8 monolithic virtualization services
      ansible.builtin.systemd:
        state: started
        name: libvirtd.service
        enabled: true
      when: ansible_distribution == 'OracleLinux' and ansible_distribution_major_version == '8'

    - name: Start and enable Oracle Linux 9 modular 'ro' virtualization services
      ansible.builtin.systemd:
        state: started
        name: "virt{{ item }}d-ro.socket"
        enabled: true
      loop:
        - qemu
        - network
        - nodedev
        - nwfilter
        - secret
        - storage
        - interface
        - proxy
      when: ansible_distribution == 'OracleLinux' and ansible_distribution_major_version == '9'

    - name: Start and enable Oracle Linux 9 modular 'admin' virtualization services
      ansible.builtin.systemd:
        state: started
        name: "virt{{ item }}d-admin.socket"
        enabled: true
      loop:
        - qemu
        - network
        - nodedev
        - nwfilter
        - secret
        - storage
        - interface
        - proxy
      when: ansible_distribution == 'OracleLinux' and ansible_distribution_major_version == '9'

    - name: Start and enable cockpit
      ansible.builtin.systemd:
        state: started
        name: cockpit.socket
        enabled: true

    - name: Open firewall for cockpit and virsh
      ansible.posix.firewalld:
        zone: public
        service: "{{ item }}"
        permanent: true
        state: enabled
        immediate: true
      loop:
        - libvirt
        - libvirt-tls

    - name: Add user to libvirt and qemu group
      ansible.builtin.user:
        name: "{{ username }}"
        groups: libvirt,qemu
        append: true

    - name: Reset ssh connection to allow user changes to affect 'current login user'
      ansible.builtin.meta: reset_connection

    - name: Install repository and packages
      when:
        - install_ocne_rpm
      block:
        - name: Install ocne repository
          ansible.builtin.dnf:
            name: oracle-olcne-release-el8
            state: present
          retries: 5
          delay: 10            
          when: ansible_distribution == 'OracleLinux' and ansible_distribution_major_version == '8'

        - name: Enable ocne repository
          ansible.builtin.command:
            cmd: dnf config-manager --enable ol8_ocne
          register: dnf_result
          changed_when: dnf_result.rc == 0
          when: ansible_distribution == 'OracleLinux' and ansible_distribution_major_version == '8'

        - name: Install ocne repository
          ansible.builtin.dnf:
            name: oracle-olcne-release-el9
            state: present
          retries: 5
          delay: 10
          when: ansible_distribution == 'OracleLinux' and ansible_distribution_major_version == '9'

        - name: Enable ocne repository
          ansible.builtin.command:
            cmd: dnf config-manager --enable ol9_ocne
          register: dnf_result
          changed_when: dnf_result.rc == 0
          when: ansible_distribution == 'OracleLinux' and ansible_distribution_major_version == '9'

        - name: Install ocne package
          ansible.builtin.dnf:
            name:
              - ocne
              - kubectl
            state: present
          retries: 5
          delay: 10

    - name: Create an ocne cluster
      when:
        - install_ocne_rpm
        - create_ocne_cluster
      block:
        - name: Provision the cluster
          ansible.builtin.shell: |
            ocne cluster start {{ ocne_cluster_node_options }} -C {{ ocne_cluster_name | default('ocne') }} -u false
          args:
            chdir: ~/
          become: true
          become_user: "{{ username }}"
          register: provision_cluster
          changed_when: provision_cluster.rc == 0

        - name: Print cluster provision output
          ansible.builtin.debug:
            var: provision_cluster
          when: debug_enabled

        - name: Add kubeconfig to .bashrc file
          ansible.builtin.lineinfile:
            path: ~/.bashrc
            line: "export KUBECONFIG=$HOME/.kube/kubeconfig.{{ ocne_cluster_name | default('ocne') }}.local"
          become: true
          become_user: "{{ username }}"
