---
# Copyright (c) 2024 2025 Oracle and/or its affiliates.
# This software is made available to you under the terms of the Universal Permissive License (UPL), Version 1.0.
# The Universal Permissive License (UPL), Version 1.0 (see COPYING or https://oss.oracle.com/licenses/upl)
# See LICENSE.TXT for details.

- name: Grow the root filesystem
  ansible.builtin.shell: |
    /usr/libexec/oci-growfs -y
  become: true
  register: result
  changed_when: result.rc == 0

- name: Add user account with access to sudo
  ansible.builtin.user:
    name: "{{ username }}"
    password: "{{ user_default_password | password_hash('sha512') }}"
    comment: Ansible created user
    groups: wheel
    append: true
    update_password: on_create
  become: true

- name: Set authorized key for user using local public key file
  ansible.posix.authorized_key:
    user: "{{ username }}"
    state: present
    key: "{{ lookup('file', lookup('env', 'HOME') + '/.ssh/' + private_key + '.pub') }}"
  become: true

- name: Set user with passwordless sudo access
  vars:
    sudo_content: "{{ username }} ALL=(ALL:ALL) NOPASSWD: ALL"
  ansible.builtin.lineinfile:
    path: "/etc/sudoers.d/{{ username }}"
    regexp: "{{ username }} ALL="
    line: "{{ sudo_content }}"
    state: present
    create: true
    mode: "0644"
  become: true

- name: Create the ansible tmp directory if it does not exist
  ansible.builtin.file:
    path: ~/.ansible/tmp
    state: directory
    mode: '0700'
  become: true
  become_user: "{{ username }}"

- name: Add locale settings to .bashrc
  ansible.builtin.lineinfile:
    dest: ~/.bashrc
    line: "{{ item }}"
  with_items:
    - 'export LC_ALL="en_US.UTF-8"'
    - 'export LC_CTYPE="en_US.UTF-8"'
  become: true
  become_user: "{{ username }}"

- name: Configure firewall to log denied packets
  ansible.builtin.command:
    cmd: firewall-cmd --set-log-denied=all
  when: debug_enabled
  register: firewall_result
  changed_when: firewall_result.rc == 0
  become: true

# Check denied packets with "journalctl -x -e" or with "dmesg | grep -i REJECT"

# - name: Get engine IP address
#   ansible.builtin.shell:
#     cmd: "dig vdsm.olvpriv.vcn.oraclevcn.com +short"
#   register: dns_ip
#   changed_when: dns_ip.rc == 0

# - name: Add engine IP and FQDN to hosts file
#   ansible.builtin.lineinfile:
#     dest: /etc/hosts
#     regexp: "{{ item.regexp }}"
#     line: "{{ item.line }}"
#   loop:
#     - { regexp: '^.*vdsm.*$', line: '{{ dns_ip }} vdsm.olvpriv.vcn.oraclevcn.com vdsm' }
#   become: true

# - name: Get kvm host IP address
#   ansible.builtin.shell:
#     cmd: "dig vdsm{{ hostvars[item].inventory_hostname_short[-2:] }}.olvpriv.vcn.oraclevcn.com +short"
#   register: kvm_dns_ip
#   loop: "{{ groups['kvm'] | flatten(levels=1) }}"
#   changed_when: kvm_dns_ip.rc == 0

# - name: Add kvm host IP and FQDN to host file
#   ansible.builtin.lineinfile:
#     dest: /etc/hosts
#     regexp: "^.*vdsm0{{ ansible_loop.index0 + 1 }}.*$"
#     line: "{{ item[ansible_loop.index0].stdout }} vdsm0{{ ansible_loop.index0 + 1 }}.olvpriv.vcn.oraclevcn.com vdsm0{{ ansible_loop.index0 + 1 }}"
#   loop:
#     - "{{ kvm_dns_ip.results }}"
#   loop_control:
#     extended: true
#   become: true
