---
# Copyright (c) 2024 Oracle and/or its affiliates.
# This software is made available to you under the terms of the Universal Permissive License (UPL), Version 1.0.
# The Universal Permissive License (UPL), Version 1.0 (see COPYING or https://oss.oracle.com/licenses/upl)
# See LICENSE.TXT for details.

- name: Launch an instance
  oracle.oci.oci_compute_instance:
    availability_domain: "{{ my_availability_domain }}"
    compartment_id: "{{ my_compartment_id }}"
    name: "{{ item.value.instance_name | default('instance-'~timestamp) }}"
    image_id: "{{ ol_image_id }}"
    shape: "{{ instance_shape }}"
    shape_config:
      ocpus: "{{ item.value.instance_ocpus }}"
      memory_in_gbs: "{{ item.value.instance_memory }}"
    create_vnic_details:
      assign_public_ip: true
      hostname_label: "{{ item.value.instance_name | default('instance-'~timestamp) }}"
      display_name: "public"
      subnet_id: "{{ my_subnet1_id }}"
    metadata:
      ssh_authorized_keys: "{{ lookup('file', lookup('env', 'HOME') + '/.ssh/' + private_key + '.pub') }}"
    agent_config:
      is_monitoring_disabled: false
      is_management_disabled: false
      are_all_plugins_disabled: false
      plugins_config:
        -
          name: "OS Management Service Agent"
          desired_state: DISABLED
    key_by: [compartment_id, availability_domain, display_name]
  register: result
  vars:
    timestamp: "{{ now().strftime('%Y%m%d-%H%M%S') }}"
  retries: 10
  delay: 30
  until: result is not failed

- name: Print instance details
  ansible.builtin.debug:
    msg:
      - "Launched a new instance:"
      - "{{ result }}"
  when: debug_enabled

- name: Set the compute instance id
  ansible.builtin.set_fact:
    my_instance_id: "{{ result.instance.id }}"

- name: Set the compute instance display_name
  ansible.builtin.set_fact:
    instance_display_name: "{{ result.instance.display_name }}"

- name: Get the primary vnic attachment details of instance
  oracle.oci.oci_compute_vnic_attachment_facts:
    compartment_id: "{{ my_compartment_id }}"
    instance_id: "{{ my_instance_id }}"
  register: result
  retries: 10
  delay: 30
  until: result is not failed

- name: Get primary vnic details
  oracle.oci.oci_network_vnic_facts:
    vnic_id: "{{ result.vnic_attachments[0].vnic_id }}"
  register: result
  retries: 10
  delay: 30
  until: result is not failed

- name: Set the instance primary private ip address
  ansible.builtin.set_fact:
    instance_private_ip: "{{ result.vnic.private_ip }}"

- name: Set the instance primary public ip address
  ansible.builtin.set_fact:
    instance_public_ip: "{{ result.vnic.public_ip }}"

- name: Add secondary private subnet vnic_attachment
  when: item.value.type == "server"
  block:
    - name: Create subnet2 vnic_attachment
      oracle.oci.oci_compute_vnic_attachment:
        compartment_id: "{{ my_compartment_id }}"
        create_vnic_details:
          assign_public_ip: false
          assign_private_dns_record: true
          display_name: "vdsm"
          subnet_id: "{{ my_subnet2_id }}"
        display_name: "vdsm"
        instance_id: "{{ my_instance_id }}"
        key_by: [compartment_id, display_name]
      register: result
      retries: 10
      delay: 30
      until: result is not failed

    - name: Print vnic_attachment for subnet2
      ansible.builtin.debug:
        var: result
      when: debug_enabled

- name: Add secondary private subnet vnic_attachment
  when: item.value.type == "kvm"
  block:
    - name: Create subnet2 vnic_attachment
      oracle.oci.oci_compute_vnic_attachment:
        compartment_id: "{{ my_compartment_id }}"
        create_vnic_details:
          assign_public_ip: false
          assign_private_dns_record: true
          display_name: "vdsm{{ item.value.instance_name[-2] }}"
          subnet_id: "{{ my_subnet2_id }}"
        display_name: "vdsm{{ item.value.instance_name[-2] }}"
        instance_id: "{{ my_instance_id }}"
        key_by: [compartment_id, display_name]
      register: result
      retries: 10
      delay: 30
      until: result is not failed

    - name: Print vnic_attachment for subnet2
      ansible.builtin.debug:
        var: result
      when: debug_enabled

- name: Add vlan vnic to instance
  when: item.value.type == "kvm"
  block:
    - name: Create vlan vnic_attachment
      oracle.oci.oci_compute_vnic_attachment:
        compartment_id: "{{ my_compartment_id }}"
        create_vnic_details:
          assign_public_ip: false
          display_name: "l2-vm-network"
          vlan_id: "{{ my_vlan_id }}"
        display_name: "l2-vm-network"
        instance_id: "{{ my_instance_id }}"
        key_by: [compartment_id, display_name]
      register: result
      retries: 10
      delay: 30
      until: result is not failed

    - name: Print vnic_attachment for vlan
      ansible.builtin.debug:
        var: result
      when: debug_enabled

- name: Add shared block volume to kvm nodes for vm storage
  when:
    - item.value.type == "kvm"
    - add_vm_block_storage
  block:
    - name: Create block volume for vm storage
      oracle.oci.oci_blockstorage_volume:
        compartment_id: "{{ my_compartment_id }}"
        availability_domain: "{{ my_availability_domain }}"
        display_name: "blk-vm-storage }}"
        size_in_gbs: "{{ blk_volume_size_in_gbs }}"
        key_by: [compartment_id, display_name]
      register: result
      vars:
        timestamp: "{{ now().strftime('%Y%m%d-%H%M%S') }}"
      retries: 10
      delay: 30
      until: result is not failed

    - name: Set the block storage block volume id
      ansible.builtin.set_fact:
        volume_id: "{{ result.volume.id }}"

    - name: Attach shared block volume for vm storage
      oracle.oci.oci_compute_volume_attachment:
        instance_id: "{{ my_instance_id }}"
        type: paravirtualized
        volume_id: "{{ volume_id }}"
        compartment_id: "{{ my_compartment_id }}"
        is_read_only: false
        is_shareable: true
      retries: 10
      delay: 30
      until: result is not failed

- name: Print the public and private ip of the newly created instance
  ansible.builtin.debug:
    msg:
      - "Instance name: {{ instance_display_name }}"
      - "  public ip: {{ instance_public_ip }}"
      - "  private ip: {{ instance_private_ip }}"
  when: debug_enabled

- name: Add host to in-memory host file
  ansible.builtin.add_host:
    name: "{{ instance_display_name }}"
    groups: "{{ item.value.type }}"
    ansible_user: opc
    ansible_private_key_file: "{{ lookup('env', 'HOME') + '/.ssh/' + private_key }}"
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
    ansible_host: "{{ instance_public_ip }}"
    ansible_port: 22
    instance_ocid: "{{ my_instance_id }}"

- name: Add host to ini host file
  ansible.builtin.lineinfile:
    path: hosts
    line: "{{ name }} ansible_host={{ ansible_host }} ansible_user={{ ansible_user }} ansible_private_key_file={{ ansible_key_file }} ansible_ssh_common_args={{ ansible_ssh_common_args }}"
    insertafter: '^\[{{ item.value.type }}\]$'
  delegate_to: localhost
  vars:
    name: "{{ instance_display_name }}"
    groups: "{{ item.value.type }}"
    ansible_user: opc
    ansible_private_key_file: "{{ lookup('env', 'HOME') + '/.ssh/' + private_key }}"
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
    ansible_host: "{{ instance_public_ip }}"
    ansible_port: 22
    instance_ocid: "{{ my_instance_id }}"